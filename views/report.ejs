<%- include('header.ejs') %>


    <main>
        <div class="container">
            <h4>Tasks Report</h4>
        </div>

        <div class="container row bg-light mt-4" style="margin: auto;">
            <div class="container">
                <div class="">
                    <!-- <h6 class="m-t-0 header-title"><b> Report </b></h6> -->


                    <div id="datatable_wrapper" style="min-height: 70vh;"
                        class="dataTables_wrapper form-inline dt-bootstrap no-footer">
                        <div class="row">
                            <!-- <div class="col-sm-6">
                                <div class="dataTables_length" id="datatable_length">
                                    <label>Show entries
                                        <select name="datatable_length" id="NumberOfRecords"
                                            class="form-control input-sm">
                                            <option value="">Chose</option>
                                            <option value="10">10</option>
                                            <option value="25">25</option>
                                            <option value="50">50</option>
                                            <option value="100">100</option>
                                        </select>
                                    </label>
                                </div>
                            </div> -->
                            <div class="col-sm-6 d-flex flex-column justify-content-end">
                                <div id="datatable_filter" class="float-end">
                                    <label class="float-end">Search:
                                        <input type="search" id="searchRecord" class="form-control input-sm"
                                            placeholder="">
                                    </label>
                                </div>
                            </div>

                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <table id="datatable" class="table table-striped table-bordered dataTable no-footer"
                                    role="grid" aria-describedby="datatable_info">
                                    <thead>
                                        <tr role="row">
                                            <th class="sorting_asc">Serial #</th>
                                            <th class="sorting">Title</th>
                                            <th class="sorting">Description</th>
                                            <th class="sorting">DeadLine</th>
                                            <th class="sorting">Assign to</th>
                                            <th class="sorting">Current Status</th>
                                            <th class="sorting">Remarks</th>
                                        </tr>
                                    </thead>

                                    <tbody id="tBody">
                                        <% result.forEach((element, index)=>{ %>


                                            <tr>
                                                <td>
                                                    <%= index + 1 %>
                                                </td>
                                                <td>
                                                    <%=element.title%>
                                                </td>
                                                <td>
                                                    <%=element.description%>
                                                </td>
                                                <td>
                                                    <%=element.date%>
                                                </td>
                                                <td>
                                                    <%=element.assignTo%>
                                                </td>
                                                <td>
                                                    <%=element.currentStatus%>
                                                </td>
                                                <td>
                                                    <%=element.remarks%>
                                                </td>
                                            </tr>
                                            <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="dataTables_info" id="datatable_info" role="status" aria-live="polite">
                                    Showing 1 to 4 of 4 entries</div>
                            </div>
                            <div class="col-sm-6">
                                <nav class="float-end" aria-label="Page navigation example">
                                    <ul class="pagination">
                                        <li class="page-item"><a class="page-link" pageValue="0" id="PrevPage"
                                                href="#">Previous</a>
                                        </li>
                                        <li class="page-item"><a class="page-link" pageValue="1" id="CurrentPage"
                                                href="#">1</a></li>
                                        <li class="page-item"><a class="page-link" pageValue="2" id="NextPage"
                                                href="#">Next</a></li>
                                    </ul>
                                </nav>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>


    </main>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const socket = io('http://localhost:3000');
            // const NumberOfRecords = document.getElementById("NumberOfRecords");
            const tBody = document.getElementById("tBody");
            const PrevPage = document.getElementById("PrevPage");
            const CurrentPage = document.getElementById("CurrentPage");
            const NextPage = document.getElementById("NextPage");
            const searchRecord = document.getElementById("searchRecord");


            let pageValue = parseInt(CurrentPage.getAttribute("pageValue")) || 1;
            let searchTerm = "";
            if (pageValue <= 1) {
                PrevPage.style.display = "none";
            }

            const fetchData = (pageValue) => {
                tBody.innerHTML = "";
                console.log("page Value in fetch", pageValue);
                if (searchTerm) {
                    socket.emit("Search Page Records", { searchTerm, pageValue });
                } else {
                    socket.emit("Page Records", pageValue);
                }
            };

            NextPage.addEventListener("click", (e) => {

                pageValue = parseInt(NextPage.getAttribute("pageValue")) || pageValue;

                // socket.emit("Next Page Records", pageValue);
                CurrentPage.setAttribute("pageValue", pageValue);
                CurrentPage.innerHTML = `${pageValue}`;
                PrevPage.setAttribute("pageValue", pageValue - 1);
                if (pageValue >= 2) {
                    PrevPage.style.display = "inline-block";
                }
                NextPage.setAttribute("pageValue", pageValue + 1);
                // console.log("Page Value:", pageValue);
                console.log("page Value in next", pageValue);
                fetchData(pageValue);
            });

            socket.on("Next Page Record to Frontend", (data) => {
                renderData(data);
            });

            PrevPage.addEventListener("click", (e) => {
                tBody.innerHTML = "";
                // const NumberOfRecordsValue = NumberOfRecords.value;
                pageValue = parseInt(PrevPage.getAttribute("pageValue"));
                // const intNoOfRecord = parseInt(NumberOfRecordsValue) || 10;
                CurrentPage.setAttribute("pageValue", pageValue);
                CurrentPage.innerHTML = `${pageValue}`;
                if (PrevPage.getAttribute("pageValue") > 1) {

                    PrevPage.setAttribute("pageValue", pageValue - 1);

                } else {

                    PrevPage.style.display = "none";

                }

                // console.log("Prev Page Value", PrevPage.getAttribute("pageValue"));

                NextPage.setAttribute("pageValue", pageValue + 1);
                fetchData(pageValue);

            });

            socket.on("Prev Page Record to Frontend", (data) => {
                renderData(data);
            });

            socket.on("Number of Record from Database", (data) => {
                renderData(data);
            });

            searchRecord.addEventListener("input", () => {
                searchTerm = searchRecord.value;
                pageValue = 1; // Reset to the first page when a new search term is entered
                CurrentPage.setAttribute("pageValue", pageValue);
                CurrentPage.innerHTML = `${pageValue}`;
                PrevPage.setAttribute("pageValue", pageValue - 1);
                PrevPage.style.display = "none";
                NextPage.setAttribute("pageValue", pageValue + 1);
                fetchData(pageValue);
            });

            socket.on("search data to frontend", (data) => {
                renderData(data);
            })

            const renderData = (data) => {
                tBody.innerHTML = "";
                if(data.length < 10){
                    NextPage.style.display = "none";
                }else{
                    NextPage.style.display = "inline-block"
                }
                data.forEach((element, index) => {
                    index = index + 1;
                    let rowColor = element.showStatus === "inactive" ? "red" : "black";
                    const row = `<tr>
                <td style="color: ${rowColor};">${index}</td>
                <td style="color: ${rowColor};">${element.title}</td>
                <td style="color: ${rowColor};">${element.description}</td>
                <td style="color: ${rowColor};">${element.date}</td>
                <td style="color: ${rowColor};">${element.assignTo}</td>
                <td style="color: ${rowColor};">${element.currentStatus}</td>
                <td style="color: ${rowColor};">${element.remarks}</td>
            </tr>`;
                    tBody.insertAdjacentHTML("beforeend", row);
                });
            };

        });


    </script>


    <%- include('footer.ejs') %>